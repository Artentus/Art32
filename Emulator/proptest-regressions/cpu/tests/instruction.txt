# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 056dde32b78ada3e0ace1e48c533f2589337cc6546e8228d40c6e9d96194f815 # shrinks to input = _J16Args { cpu: Cpu { program_counter: 268435456, interrupt_state: Servicing, privilege_level: System, state: CpuState { regs: RegisterFile([0, 0, 0, 0, 0, 288838519, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), flags: Flags(0x0) }, alt_state: CpuState { regs: RegisterFile([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), flags: Flags(0x0) }, interrupt_mask: 0, pending_interrupts: 0, hardware_interrupt_table: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], software_interrupt_table: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], exception_table: [0, 0], interrupt_return_address: 0 }, base: Tp, offset: -276 }
cc dec738d11e56ef589fef415ca64b315a9e9209b8f6ad525393a2cc94afd3da87 # shrinks to input = _Jl16Args { cpu: Cpu { program_counter: 268435456, interrupt_state: Servicing, privilege_level: System, state: CpuState { regs: RegisterFile([0, 0, 905949733, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), flags: Flags(0x0) }, alt_state: CpuState { regs: RegisterFile([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), flags: Flags(0x0) }, interrupt_mask: 0, pending_interrupts: 0, hardware_interrupt_table: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], software_interrupt_table: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], exception_table: [0, 0], interrupt_return_address: 0 }, base: Sp, offset: -396 }
cc 286700f28916b432c3f0628d7af3c8a4893b250dac96372e411596b32eed5d46 # shrinks to input = _Jl16Args { cpu: Cpu { program_counter: 268435456, interrupt_state: Servicing, privilege_level: System, state: CpuState { regs: RegisterFile([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), flags: Flags(0x0) }, alt_state: CpuState { regs: RegisterFile([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), flags: Flags(0x0) }, interrupt_mask: 0, pending_interrupts: 0, hardware_interrupt_table: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], software_interrupt_table: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], exception_table: [0, 0], interrupt_return_address: 0 }, base: Ra, offset: 334 }
cc e948562b44b0d29dcf97fecea506c40a26c7be7f43f767cd62ec4bced175be38 # shrinks to input = _Br32Args { cpu: Cpu { program_counter: 268435456, interrupt_state: Servicing, privilege_level: System, state: CpuState { regs: RegisterFile([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), flags: Flags(ZERO) }, alt_state: CpuState { regs: RegisterFile([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), flags: Flags(0x0) }, interrupt_mask: 0, pending_interrupts: 0, hardware_interrupt_table: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], software_interrupt_table: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], exception_table: [0, 0], interrupt_return_address: 0 }, condition: Eq, offset: -1977198 }
cc 7690ea9127d022c3a893a46d1524b27b1ee63d0190a99bb7aa8c578756b65c63 # shrinks to input = _Jl32Args { cpu: Cpu { program_counter: 268435456, interrupt_state: Servicing, privilege_level: System, state: CpuState { regs: RegisterFile([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), flags: Flags(0x0) }, alt_state: CpuState { regs: RegisterFile([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), flags: Flags(0x0) }, interrupt_mask: 0, pending_interrupts: 0, hardware_interrupt_table: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], software_interrupt_table: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], exception_table: [0, 0, 0], interrupt_return_address: 0 }, link: Zero, base: S9, offset: 8192 }
