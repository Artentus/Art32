enum Condition: bits<3> {
    Equal                  = 0x0, // Z
    NotEqual               = 0x1, // !Z
    UnsignedLessThan       = 0x2, // !C
    UnsignedGreaterOrEqual = 0x3, // C
    SignedLessThan         = 0x4, // S != O
    SignedGreaterOrEqual   = 0x5, // S == O
    Always                 = 0x6, // true
    Never                  = 0x7, // false
}

mod ConditionUnit (
    in sig flags: Flags,
    in sig condition: Condition,

    out sig conditional: bool,
) {
    comb {
        conditional = match condition {
            Condition::Equal                  => flags.zero,
            Condition::NotEqual               => !flags.zero,
            Condition::UnsignedLessThan       => !flags.carry,
            Condition::UnsignedGreaterOrEqual => flags.carry,
            Condition::SignedLessThan         => flags.sign != flags.overflow,
            Condition::SignedGreaterOrEqual   => flags.sign == flags.overflow,
            Condition::Always                 => true,
            Condition::Never                  => false,
        };
    }
}
